#!/bin/bash

PATH=/usr/local/sbin:/usr/sbin:/sbin:/usr/local/bin:/usr/bin:/bin:/usr/X11R6/bin:/opt/sophos/bin
export PATH

if [ ! "${1}" ];then
  exit;
fi;

if [ "${1}" == "ppp0" ];then
  for ppplnk in /tmp/pppup/ppp[1-9].ip-up;do
    if [ -x ${ppplnk} ] && [ -d /sys/class/net/${ppplnk:11:4} ];then
      ${ppplnk}
    fi;
  done;
  exit;
fi;

INT=`ifrename -i ${1}`

if [ ! "${INT}" ];then
  INT=${1}
fi;

if [ ! -e /etc/ifconf/ifup.${INT} ];then
  exit
fi

eval `cat /etc/ifconf/ifup.${INT}`

#Set Address On Interface
/sbin/ip addr flush dev ${IFNAME}
if [ "${CHILLI}" == "0" ];then
  /sbin/ip addr add ${ADDRESS}/${NETMASK} dev ${IFNAME} broadcast ${BROADCAST} > /dev/null 2>&1
fi;

#Configure MTU
if [ "$MTU" ];then
  /sbin/ip link set dev ${IFNAME} mtu ${MTU}
fi;

if [ -d /sys/class/net/${IFNAME}/wireless ];then
  if [ -e /etc/hostapd/${IFNAME}.conf ];then
    if [ -e /var/run/hostapd.${IFNAME}.pid ];then
      kill -9 `cat /var/run/hostapd.${IFNAME}.pid`
    fi
    (MACADDR=`cat /sys/class/net/${INT}/address`
    MACADDR=`/usr/sbin/macmask ${MACADDR} 2`
    /sbin/ip link set dev ${INT} address ${MACADDR}
    /sbin/ip link set dev ${IFNAME} up) >/dev/null 2>&1
    (/sbin/iwconfig ${IFNAME} txpower ${POWER}
    /usr/sbin/hostapd -P /var/run/hostapd.${IFNAME}.pid -B /etc/hostapd/${IFNAME}.conf
    killall -1 dhcpd) >/dev/null 2>&1
   elif [ "$ESSID" ] && [ "$CHANNEL" ];then
    (/sbin/iwconfig ${IFNAME} channel ${CHANNEL}
    /sbin/iwconfig ${IFNAME} txpower ${POWER}
    /sbin/iwconfig ${IFNAME} essid "${ESSID}"
    /sbin/iwconfig ${IFNAME} name "${NAME}"
    /sbin/iwconfig ${IFNAME} key ${KEY}
    /sbin/iwconfig ${IFNAME} ap ${AP}
    /sbin/iwconfig ${IFNAME} mode ${MODE}
    /sbin/iwconfig ${IFNAME} rate ${RATE}) > /dev/null 2>&1
    /sbin/ip link set ${IFNAME} up
   else
    /sbin/ip link set ${IFNAME} up
  fi;
 else
  /sbin/ip link set ${IFNAME} up
fi;

if [ -s /etc/chilli/${IFNAME}.conf ] && [ "${CHILLI}" == "1" ];then
  if [ -e /var/run/chilli.${IFNAME} ];then
    kill -9 `cat /var/run/chilli.${IFNAME}`
  fi
  /usr/sbin/chilli -c /etc/chilli/${IFNAME}.conf
 else
  #Setup Routing For Network Not To SNAT Address Space
  if [ ${NETWORK} != "0.0.0.0" ] && [ ${NETMASK} != "32" ];then
#   /sbin/ip route add ${NETWORK}/${NETMASK} src ${ADDRESS} dev ${IFNAME} table Ipsec > /dev/null 2>&1
    /sbin/ip route add ${NETWORK}/${NETMASK} src ${ADDRESS} dev ${IFNAME} scope link table 80 > /dev/null 2>&1
  fi;
fi;

#Setup Static Routes
if [ "$ROUTES" ];then
  for statroute in ${ROUTES};do
    echo $statroute |awk -F: -v INT=${IFNAME} '{printf "/sbin/ip route add %s via %s dev %s table 50\n",$1,$2,INT}' |sh > /dev/null 2>&1
  done;
fi;

#Setup Alias Addresses
if [ "$ALIASES" ];then
  for alias in ${ALIASES};do
    echo $alias |awk -F: -v INT=${IFNAME} '{printf "/sbin/ip addr add %s/%s dev %s broadcast %s\n",$1,$2,INT,$4}'|sh > /dev/null 2>&1
    echo $alias |awk -F: -v INT=${IFNAME} '{printf "/sbin/ip route add %s/%s src %s dev %s table Ipsec\n",$3,$2,$1,INT}'|sh > /dev/null 2>&1
    echo $alias |awk -F: -v INT=${IFNAME} '{printf "/sbin/ip route add %s/%s src %s dev %s table 80\n",$3,$2,$1,INT}'|sh > /dev/null 2>&1
  done;
fi;

#Configure VLAN Interfaces [There ifup scripts will be run]
if [ "$VLANS" ];then
  for vlanid in ${VLANS};do
    /sbin/ip link set ${IFNAME}.$vlanid down >/dev/null 2>&1
    /usr/sbin/vconfig rem ${IFNAME}.$vlanid >/dev/null 2>&1
    /usr/sbin/vconfig add ${IFNAME} $vlanid >/dev/null 2>&1
    /usr/sbin/vconfig set_flag ${IFNAME}.$vlanid 1 1 >/dev/null 2>&1
    /sbin/ip link set ${IFNAME}.$vlanid up >/dev/null 2>&1
    /sbin/ip link set dev ${IFNAME}.$vlanid mtu ${VMTU} > /dev/null 2>&1
  done;
fi;

#Set Route Path Filtering
if [ "$RP_FIL" ];then
  echo ${RP_FIL} > /proc/sys/net/ipv4/conf/$IFNAME/rp_filter
fi;

#Run Bandwidth Manager Scripts
if [ -e "/etc/ifconf/ifbw.${INT}" ] && [ ! -e /etc/.networksentry-lite ];then
  sh /etc/ifconf/ifbw.${INT}
fi;

if [ "$FIREWALL" == "INTERNAL" ];then
  #Startup DNS Server
  if [ ! -e /etc/rndc.key ];then
    /usr/sbin/rndc-confgen -a > /dev/null 2>&1
  fi;
  #Start DNS As Soon As Posible
  if [ ! "`/bin/pidof named`" ];then
    /usr/sbin/named > /dev/null 2>&1
  fi;

  if [ ! -e /etc/.install ] && [ ! -e /etc/.firstboot ];then
    /etc/rc.d/rc.ldap > /dev/null 2>&1
  fi;
  
  #Start NSCD
  if [ ! -d /var/run/nscd ];then
    mkdir /var/run/nscd
  fi;
  if [ ! -d /var/db/nscd ];then
    mkdir /var/db/nscd
  fi;
  rm /var/run/nscd/* /var/db/nscd/* > /dev/null 2>&1
#  sleep 2
#  /usr/sbin/nscd

  if [ ! -e /etc/ssh_host_key ];then
    ssh-keygen -t rsa1 -f /etc/ssh_host_key -N "" > /dev/null 2>&1
  fi;
  if [ ! -e /etc/ssh_host_dsa_key ];then
    ssh-keygen -t dsa -f /etc/ssh_host_dsa_key -N "" > /dev/null 2>&1
  fi;
  if [ ! -e /etc/ssh_host_rsa_key ];then
    ssh-keygen -t rsa -f /etc/ssh_host_rsa_key -N "" > /dev/null 2>&1
  fi;
  if [ ! -e /etc/ssh_host_ecdsa_key ];then
    ssh-keygen -t ecdsa -f /etc/ssh_host_ecdsa_key -N "" > /dev/null 2>&1
  fi;
  /usr/sbin/sshd > /dev/null 2>&1

#  /etc/rc.d/rc.firewall startup
#  killall pppd

  #Set Contract Expectations Limit
  echo 65536 > /proc/sys/net/netfilter/nf_conntrack_expect_max
fi;

if [ "$FORWARD" == "1" ];then
  echo 1 > /proc/sys/net/ipv4/ip_forward
  echo 1 > /proc/sys/net/ipv6/conf/${INT}/forwarding
fi;

echo 2 > /proc/sys/net/ipv6/conf/${INT}/use_tempaddr;

#Bring Up PPP Links
for pppl in $PPPLINKS;do
  ip link show ppp$pppl > /dev/null 2>&1
  if [ $? != 0 ];then 
    /etc/ifconf/pppup.ppp$pppl;
  fi;
done;

if [ "$FIREWALL" == "EXTERNAL" ];then
  if [ "$DEFAULT" ];then
    sleep 2;
    (/sbin/ip route del 0/0 table 90;
    /sbin/ip route add 0/0 via ${DEFAULT} table 90) > /dev/null 2>&1
    (echo "#!/bin/bash";echo;echo "/etc/ppp/ip-up ${INT} ${ADDRESS} ${DEFAULT} hotplug") > /tmp/pppup/ext.ip-up
   else
    DEFINT=`ip route show 0.0.0.0/0 table 90 |awk '{print $5}'`
    if [ "$DEFINT" ];then
      IPADDR=`ip -f inet -o addr show $DEFINT |awk '{print $4}' |cut -d/ -f1`
      DEFGW=`ip route show 0.0.0.0/0 table 90 |awk '{print $3}'`
      (echo "#!/bin/bash";echo;echo "/etc/ppp/ip-up ${DEFINT} ${IPADDR} ${DEFGW} hotplug") > /tmp/pppup/ext.ip-up
    fi;
  fi;
  chmod 700 /tmp/pppup/ext.ip-up
  /tmp/pppup/ext.ip-up
 elif [ "$FIREWALL" == "INTERNAL" ] && [ "$DEFAULT" ];then
  sleep 2;
  (/sbin/ip route del 0/0 table 90;
  /sbin/ip route add 0/0 via ${DEFAULT} table 90) > /dev/null 2>&1
fi;

#Bridge control
if [ "${BRIDGE}" ];then
  if [ ! -d /proc/sys/net/ipv4/neigh/${BRIDGE} ];then
   (brctl addbr ${BRIDGE}
    brctl setfd ${BRIDGE} 0
    brctl stp ${BRIDGE} on) > /dev/null 2>&1
  fi;
  sleep 5
  brctl addif ${BRIDGE} ${IFNAME} > /dev/null  2>&1
fi;
