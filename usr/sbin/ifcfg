#!/bin/bash

PATH=/usr/local/sbin:/usr/sbin:/sbin:/usr/local/bin:/usr/bin:/bin:/usr/X11R6/bin:/opt/sophos/bin
export PATH

if [ "${2}" == "rename" ];then
  NINT=`ifrename -i ${1}`
fi;

if [ "${NINT}" != "" ];then
  INT=${NINT}
 else
  INT=${1}
fi;

if [ ! -e /etc/ifconf/ifup.${INT} ];then
  exit
fi

eval `cat /etc/ifconf/ifup.${INT}`

if [ "${INT}" == "eth0" ] && [ "`grep eth0 /proc/net/wireless`" ] && \
   [ -e /etc/ifconf/ifwl.eth0 ] && [ -e /etc/.networksentry-lite ];then
  eval `cat /etc/ifconf/ifwl.eth0`
fi;

#Set Address On Interface
/sbin/ip addr flush dev ${IFNAME}
/sbin/ip addr add ${ADDRESS}/${NETMASK} dev ${IFNAME} broadcast ${BROADCAST} > /dev/null 2>&1

#Configure MTU
if [ "$MTU" ];then
  /sbin/ip link set dev ${IFNAME} mtu ${MTU}
fi;

#Bring Up Interface
sleep 1
/sbin/ip link set ${IFNAME} up

#Setup Routing For Network Not To SNAT Address Space
if [ ${NETWORK} != "0.0.0.0" ] && [ ${NETMASK} != "32" ];then
#  /sbin/ip route add ${NETWORK}/${NETMASK} src ${ADDRESS} dev ${IFNAME} table Ipsec > /dev/null 2>&1
  /sbin/ip route add ${NETWORK}/${NETMASK} src ${ADDRESS} dev ${IFNAME} scope link table 80 > /dev/null 2>&1
fi;

#Setup Static Routes
if [ "$ROUTES" ];then
  for statroute in ${ROUTES};do
    echo $statroute |awk -F: -v INT=${IFNAME} '{printf "/sbin/ip route add %s via %s dev %s table 50\n",$1,$2,INT}' |sh > /dev/null 2>&1
  done;
fi;

#Setup Alias Addresses
if [ "$ALIASES" ];then
  for alias in ${ALIASES};do
    echo $alias |awk -F: -v INT=${IFNAME} '{printf "/sbin/ip addr add %s/%s dev %s broadcast %s\n",$1,$2,INT,$4}'|sh > /dev/null 2>&1
    echo $alias |awk -F: -v INT=${IFNAME} '{printf "/sbin/ip route add %s/%s src %s dev %s table Ipsec\n",$3,$2,$1,INT}'|sh > /dev/null 2>&1
    echo $alias |awk -F: -v INT=${IFNAME} '{printf "/sbin/ip route add %s/%s src %s dev %s table 80\n",$3,$2,$1,INT}'|sh > /dev/null 2>&1
  done;
fi;

#Configure VLAN Interfaces [There ifup scripts will be run]
if [ "$VLANS" ];then
  for vlanid in ${VLANS};do
    /sbin/ip link set ${IFNAME}.$vlanid down >/dev/null 2>&1
    /usr/sbin/vconfig rem ${IFNAME}.$vlanid >/dev/null 2>&1
    /usr/sbin/vconfig add ${IFNAME} $vlanid >/dev/null 2>&1
    /usr/sbin/vconfig set_flag ${IFNAME}.$vlanid 1 1 >/dev/null 2>&1
    /sbin/ip link set ${IFNAME}.$vlanid up >/dev/null 2>&1
    /sbin/ip link set dev ${IFNAME}.$vlanid mtu ${VMTU} > /dev/null 2>&1
  done;
fi;

#Set Route Path Filtering
if [ "$RP_FIL" ];then
  echo ${RP_FIL} > /proc/sys/net/ipv4/conf/$IFNAME/rp_filter
fi;


if [ -e /etc/hostapd/${IFNAME}.conf ];then
  /sbin/ip link set dev ${IFNAME} up >/dev/null 2>&1
  (/usr/sbin/hostapd -d /etc/hostapd/${IFNAME}.conf &) >/dev/null 2>&1
  killall -1 dhcpd
 else
  #Configure Wireless Extensions
  if [ "$ESSID" ] && [ "$CHANNEL" ];then
    /sbin/iwconfig ${IFNAME} essid "${ESSID}" > /dev/null 2>&1
    /sbin/iwconfig ${IFNAME} channel ${CHANNEL} > /dev/null 2>&1
    /sbin/iwconfig ${IFNAME} name "${NAME}" > /dev/null 2>&1
    /sbin/iwconfig ${IFNAME} key ${KEY} > /dev/null 2>&1
    /sbin/iwconfig ${IFNAME} ap ${AP} > /dev/null 2>&1
    /sbin/iwconfig ${IFNAME} mode ${MODE} > /dev/null 2>&1
    /sbin/iwconfig ${IFNAME} txpower ${POWER} > /dev/null 2>&1
    /sbin/iwconfig ${IFNAME} rate ${RATE} > /dev/null 2>&1
  fi;
fi;

#Run Bandwidth Manager Scripts
if [ -e "/etc/ifconf/ifbw.${INT}" ] && [ ! -e /etc/.networksentry-lite ];then
  sh /etc/ifconf/ifbw.${INT}
fi;

if [ "$FIREWALL" == "INTERNAL" ];then
  #Startup DNS Server
  if [ ! -e /etc/rndc.key ];then
    /usr/sbin/rndc-confgen -a > /dev/null 2>&1
  fi;
  #Start DNS As Soon As Posible
  if [ ! "`/bin/pidof named`" ];then
    /usr/sbin/named > /dev/null 2>&1
  fi;

  if [ ! -e /etc/.install ] && [ ! -e /etc/.firstboot ];then
    /etc/rc.d/rc.ldap > /dev/null 2>&1
  fi;
  
  #Start NSCD
  if [ ! -d /var/run/nscd ];then
    mkdir /var/run/nscd
  fi;
  if [ ! -d /var/db/nscd ];then
    mkdir /var/db/nscd
  fi;
  rm /var/run/nscd/* /var/db/nscd/* > /dev/null 2>&1
#  sleep 2
#  /usr/sbin/nscd

  if [ ! -e /etc/ssh_host_key ];then
    ssh-keygen -t rsa1 -f /etc/ssh_host_key -N "" > /dev/null 2>&1
  fi;
  if [ ! -e /etc/ssh_host_dsa_key ];then
    ssh-keygen -t dsa -f /etc/ssh_host_dsa_key -N "" > /dev/null 2>&1
  fi;
  if [ ! -e /etc/ssh_host_rsa_key ];then
    ssh-keygen -t rsa -f /etc/ssh_host_rsa_key -N "" > /dev/null 2>&1
  fi;
  /usr/sbin/sshd > /dev/null 2>&1

#  /etc/rc.d/rc.firewall startup
#  killall pppd

  #Set Contract Expectations Limit
  echo 65536 > /proc/sys/net/netfilter/nf_conntrack_expect_max
fi;

if [ "$FORWARD" == "1" ];then
  echo 1 > /proc/sys/net/ipv4/ip_forward
fi;

#Bring Up PPP Links
#for pppl in $PPPLINKS;do
#  ip link show ppp$pppl > /dev/null 2>&1
#  if [ $? != 0 ];then 
#    /etc/ifconf/pppup.ppp$pppl;
#  fi;
#done;

if [ "$FIREWALL" == "EXTERNAL" ];then
  if [ "$DEFAULT" ];then
    sleep 2;
    (/sbin/ip route del 0/0 table 90;
    /sbin/ip route add 0/0 via ${DEFAULT} table 90) > /dev/null 2>&1
    (echo "#!/bin/bash";echo;echo "/etc/ppp/ip-up ${INT} ${ADDRESS} ${DEFAULT} hotplug") > /tmp/pppup/ext.ip-up
   else
    DEFINT=`ip route show 0.0.0.0/0 table 90 |awk '{print $5}'`
    if [ "$DEFINT" ];then
      IPADDR=`ip -f inet -o addr show $DEFINT |awk '{print $4}' |cut -d/ -f1`
      DEFGW=`ip route show 0.0.0.0/0 table 90 |awk '{print $3}'`
      (echo "#!/bin/bash";echo;echo "/etc/ppp/ip-up ${DEFINT} ${IPADDR} ${DEFGW} hotplug") > /tmp/pppup/ext.ip-up
    fi;
  fi;
  chmod 700 /tmp/pppup/ext.ip-up
  /tmp/pppup/ext.ip-up
 elif [ "$FIREWALL" == "INTERNAL" ] && [ "$DEFAULT" ];then
  sleep 2;
  (/sbin/ip route del 0/0 table 90;
  /sbin/ip route add 0/0 via ${DEFAULT} table 90) > /dev/null 2>&1
fi;
