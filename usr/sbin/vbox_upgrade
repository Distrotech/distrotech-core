#!/bin/bash

if [ ! -e /etc/netsentry-version ];then
  echo "This script must be run on a valid server"
  exit 255
fi;

DIST="/mnt/dev"

#Touch some files that should not be updated just in case
touch /etc/autofs.conf /etc/dhcpd.conf /etc/freshclam.conf /etc/hosts /etc/mgetty.config /etc/popper.conf /etc/rsyncd.conf 
touch /etc/asterisk/agents.conf /etc/asterisk/iax.conf /etc/ppp/diald.scr /etc/ppp/ip-down /etc/ppp/options 
touch /etc/ppp/secret /etc/racoon/racoon.conf /etc/radiusclient/port-id-map /etc/radiusclient/radiusclient.conf 
touch /etc/radiusclient/servers /etc/rc.d/rc.mount /etc/rc.d/rc.tunnels /etc/squid/filter.cnf /etc/squid/filter.conf

#Rsync options
ROPTS="-avOuHKSzP --exclude-from=/var/spool/apache/htdocs/ns/config/exclude.nfs"
RROPTS="-R ${ROPTS}"
RTIMEOUT=60

RERR=0;
DEFVER="10.10.1";
NOKERN=0;
RSYNCK=0;

if [ ! -d /var/spool/rsync/programs ];then
  /usr/sbin/socktest  127.0.0.1 873 > /dev/null 2>&1 
  RES=$?
 else
  RES=0;
fi;

if [ ${RES} != 0 ];then
  if [ ! -d /mnt/update ];then
    mkdir -p /mnt/update
  fi;
  vgchange -a y > /dev/null >&1
  mount -L UPGRADE /mnt/update -o ro> /dev/null 2>&1
  if [ $? != 0 ];then
    if [ -e /dev/cdrom ];then
       mount /dev/cdrom /mnt/cdrom -o ro > /dev/null 2>&1
       if [ $? == 0 ];then
         if [ -e /mnt/cdrom/flash.hdd ];then
           LOOP=`losetup -f`
           losetup ${LOOP} /mnt/cdrom/flash.hdd
           vgchange -a y > /dev/null >&1
           mount -L UPGRADE /mnt/update -o ro
           if [ $? != 0 ];then
             umount /mnt/cdrom
             echo "Needs local Upgrade Disk - No Upgrade Partition"
             exit 255;
           fi;
          else
           umount /mnt/cdrom
           echo "Update media not found"
           exit 255;
          fi;
        else
         echo "Update media not found"
         exit 255;
       fi;
     else
      echo "Update media not found"
      exit 255;
    fi;
  fi;
  if [ ! -d /mnt/update${DIST} ];then
    mkdir -p /mnt/update${DIST}
  fi;
  mount -L INSTALL /mnt/update${DIST} -o ro> /dev/null 2>&1
  if [ $? != 0 ];then
    umount /mnt/update
    echo "Needs local Upgrade Disk - No Install Partition"
    exit 255;
  fi;
  /usr/bin/rsync --daemon --config /mnt/update${DIST}/etc/rsyncd-update.conf > /dev/null 2>&1
  /usr/sbin/socktest  127.0.0.1 873 > /dev/null 2>&1 
  if [ $? != 0 ];then
    umount /mnt/update${DIST}
    umount /mnt/update
    echo "Needs local Upgrade Disk - Service Failure"
    exit 255;
  fi;
  RSYNCK=1;
fi;

eval `cat /etc/netsentry-version`
if [ "$1" == "" ] || [ -d /var/spool/rsync/programs ];then
  NOKERN=1;
  KERNEL=`uname -r |awk -F- '$2 == "i386" || $2 == "x86" {print $1"-"$2}'`
  if [ "$KERNEL" == "" ];then
    KERNEL=`uname -r |awk -F- '$3 == "i386"  || $3 == "x86" {print $1"-"$2"-"$3}'`  
  fi;
 else
  KERNEL=$1
fi

if [ "$VERSION" == "" ];then
  LVERSION="${DEFVER}"
 else
  LVERSION=$VERSION
fi;

if [ ! "$KERNOPTS" ];then
  if [ "`uname -r |grep nosmp`" ] || [ -e "/etc/.bootnosmp" ];then
    KERNOPTS="nosmp"
  fi;
fi;

#Update netsentry-version
if [ "$1" != "" ] && [ ! -d /var/spool/rsync/programs ];then
  (cat <<__EOF__
BRAND="$BRAND";
VERSION="$LVERSION";
KERNEL="$KERNEL";
SMP_KERNEL="\$KERNEL-smp";
INSTALL_KERNEL="\$KERNEL-install";
IP_ADDR="$IP_ADDR";
SN_ADDR="$SN_ADDR";
HN_ADDR="$HN_ADDR";
DOM_ADDR="$DOM_ADDR";
BT="\$BRAND V\$VERSION Linux V\$KERNEL Install";
KERNOPTS="$KERNOPTS";
EXTRA_DEV="$EXTRA_DEV";
USBSLEEP="$USBSLEEP";
__EOF__
) > /etc/netsentry-version
  touch /var/spool/apache/htdocs/ns/config/exclude.nfs
fi;

SMP_KERNEL="$KERNEL-smp";
INSTALL_KERNEL="$KERNEL-install";

KERNEX="--include=/$INSTALL_KERNEL/** \
        --include=/$SMP_KERNEL/** \
        --include=/$INSTALL_KERNEL/ \
        --include=/$SMP_KERNEL/ \
        --include=/*$INSTALL_KERNEL \
        --include=/*$SMP_KERNEL \
        --exclude=/* \
        --exclude=*"

#Im not a "master" server so need a sync
if [ ! -d /var/spool/rsync/programs ];then
  #Old upgrade postgre to ver 8
#  if [ ! "`psql -V |head -1|grep "8.2.3"`" ];then
#    /usr/bin/pg_dumpall -U pgsql -h 127.0.0.1 -c |gzip -c > /var/tmp/pgsql.sql
#    if [ $? != 0 ];then
#      echo "Upgrade Not Done !!!!"
#      exit -1
#    fi;
#    /usr/bin/pg_dumpall -U postgres -p 5433 -h 127.0.0.1 -c |gzip -c > /var/tmp/cubit.sql
#    if [ $? != 0 ];then
#      echo "Upgrade Not Done !!!!"
#      exit -1
#    fi;
#    if [ -s /var/tmp/pgsql.sql ] && [ -s /var/tmp/cubit.sql ];then
#      /usr/bin/killall -9 crond > /dev/null 2>&1
#      /usr/bin/killall -9 asterisk > /dev/null 2>&1
#      /bin/su pgsql -c "pg_ctl -D /var/spool/pgsql -m immediate stop" > /dev/null 2>&1
#      /bin/su postgres -c "pg_ctl -D /var/spool/cubit -m immediate stop" > /dev/null 2>&1
#      /usr/bin/killall -9 postmaster > /dev/null 2>&1
#      /usr/bin/rsync $RROPTS --timeout=$RTIMEOUT 127.0.0.1::postgresql /
#      if [ $? != 0 ];then
#        echo "Upgrade Not Done !!!!"
#        exit -1
#      fi;
#      /bin/rm -rf /var/spool/pgsql
#      /bin/rm -rf /var/spool/cubit
#      /etc/rc.d/rc.exchange > /dev/null 2>&1
#      /usr/bin/zcat /var/tmp/pgsql.sql |psql -U pgsql -h 127.0.0.1 -f - asterisk > /dev/null 2>&1
#      /etc/rc.d/rc.cubit > /dev/null 2>&1
#      /usr/bin/sleep 5
#      /usr/bin/zcat /var/tmp/cubit.sql |psql -U postgres -h 127.0.0.1 -p 5433 -f - template1 > /dev/null 2>&1
#      /usr/sbin/crond >> /var/log/cron 2>&1
#      sed -e "s/#listen_addresses.*/listen_addresses = '*'/" -e "s/#ssl.*/ssl= on/" "/var/spool/pgsql/postgresql.conf" > /tmp/pg.cnf
#      cp /tmp/pg.cnf "/var/spool/pgsql/postgresql.conf"
#      rm /tmp/pg.cnf
#     else
#      echo "Upgrade Not Done !!!!"
#    fi;
#  fi;

  if [ -d /var/spool/vbox ];then
    if [ ! -d ${DIST}/install ];then
      rsync $RROPTS --timeout=$RTIMEOUT 127.0.0.1::install/install/core/filelist ${DIST}/
      if [ -e ${DIST}/install/core/filelist ];then
        grep -vE "(^sys)|(^dev)|(^proc)|(/$)" ${DIST}/install/core/filelist > /tmp/filelist
        cd /
        tar --use-compress-program=bzip2 -T /tmp/filelist  -cf ${DIST}/install/core/install.tbz
        cd
        rm /tmp/filelist
        tar -C ${DIST} --use-compress-program=bunzip2 -xf ${DIST}/install/core/install.tbz
        rsync $RROPTS -c --timeout=$RTIMEOUT --exclude /install --exclude /boot --exclude /lib/modules 127.0.0.1::install ${DIST}
      fi;
    fi;
    if [ -d /lib/modules/${INSTALL_KERNEL} ];then
      if [ ! -d ${DIST}/lib/modules ];then
        mkdir -p ${DIST}/lib/modules
      fi;
      rsync $ROPTS /lib/modules/${INSTALL_KERNEL} ${DIST}/lib/modules/
    fi;
    if [ ! -d /var/spool/rsync/kernuser ];then
      mkdir -p /var/spool/rsync/kernuser
    fi;
    rsync $ROPTS --timeout=$RTIMEOUT 127.0.0.1::kernuser/kernel-${SMP_KERNEL} /var/spool/rsync/kernuser/

    for rdatain in "install/ ${DIST}/" "iso/ /var/spool/vbox/";do
      echo $rdatain
      rsync ${RROPTS} --timeout=$RTIMEOUT 127.0.0.1::$rdatain
      if [ $? != 0 ];then
        RERR=255;
      fi;
      echo;echo
    done;
  fi;

  if [ -e /etc/asterisk/version.10 ];then
    ast_repo="asterisk-10";
   else
    ast_repo="asterisk";
  fi;

  for rdatain in "vbox /"  "share /var/spool/samba/share/" "programs /" "manuals /var/spool/apache/htdocs/" "${ast_repo} /" "avirus /var/spool/avirus";do 
    echo $rdatain
    rsync $RROPTS --timeout=$RTIMEOUT 127.0.0.1::$rdatain
    if [ $? != 0 ];then
      RERR=255;
    fi;
    echo;echo
  done;

  #Sync Asterisk Modules
  if [ -e /etc/asterisk/version.10 ];then
    rsync $RROPTS --delete --exclude=chan_lcr.so --timeout=$RTIMEOUT 127.0.0.1::asterisk-10/usr/lib/asterisk/modules-10 /
   else
    rsync $RROPTS --delete --exclude=chan_lcr.so --timeout=$RTIMEOUT 127.0.0.1::asterisk/usr/lib/asterisk/modules-1.8 /
  fi;
  if [ $? != 0 ];then
    RERR=255;
  fi;

  #Update kernel
  if [ "$NOKERN" != "1" ];then
    KERR=0;
    for rdatain in "kernel /boot/" "kernmod /lib/modules/";do
      echo $rdatain
      rsync -c $RROPTS $KERNEX --timeout=$RTIMEOUT 127.0.0.1::$rdatain
      if [ $? != 0 ];then
        KERR=1;
      fi;
      echo;echo
    done;
    for rdatain in "kernuser/kernel-${SMP_KERNEL}*/* /" "kernmod/${SMP_KERNEL} /lib/modules/" "kernmod/${INSTALL_KERNEL} /lib/modules/";do
      echo $rdatain
      rsync -c $ROPTS --timeout=$RTIMEOUT 127.0.0.1::$rdatain
      if [ $? != 0 ];then
        KERR=1;
      fi;
    done;

    if [ $KERR != 0 ];then
      RERR=$KERR;
    fi;
  fi;
fi;

#Remove local media
if [ $RSYNCK == 1 ];then
  while [ `pidof rsync` ];do
    killall rsync
  done
  umount /mnt/update${DIST}
  umount /mnt/update
  if [ "${LOOP}" ];then
    vgchange  -a n flash > /dev/null 2>&1
    losetup -d ${LOOP}
    umount /mnt/cdrom
  fi;
fi;

if [ -d /var/spool/vbox ];then
  for MPATH in / /dev /proc /sys;do
    if [ ! -d ${DIST}${MPATH} ];then
      mkdir ${DIST}${MPATH}
    fi;
  done;

  if [ ! -d ${DIST}/dev/udevdb ];then
    mount --bind /dev ${DIST}/dev
  fi;

  if [ ! -e ${DIST}/proc/1 ];then
    mount -t proc none ${DIST}/proc
  fi;

  if [ ! -d ${DIST}/sys/module ];then
    mount -t sysfs none ${DIST}/sys
  fi;

  chroot ${DIST} /install/mkinsttar
  chroot ${DIST} /install/mkbootimg

  if [ ! -e ${DIST}/install/core/kernel.tar.bz2 ];then
    ${DIST}/install/tarkernel
  fi;

  (rsync -avP /var/spool/avirus/*.* ${DIST}/install/avirus/
  rsync -avP /var/spool/rsync/programs/var/spool/update ${DIST}/install/ ) > /dev/null 2>&1
fi;

#Final processing on no error
if [ ${RERR} == 0 ];then
  ldconfig
  /usr/sbin/genconf

  chmod 1777 /var/run
  /usr/bin/rebuild-info
  /usr/sbin/asterisk -rx "dialplan reload"

#  pear channel-update pear.php.net;pear upgrade-all

  #Run any SQL / LDAP scripts on no error
  if [ -d /var/spool/update ];then
    for I in /var/spool/update/*.sql ; do
      if test $I -nt /etc/asterisk/astschema.psql.gz ;then
        cat $I |psql -U asterisk -h 127.0.0.1
      fi
    done;
    touch /etc/asterisk/astschema.psql.gz

    for I in /var/spool/update/*.esql ; do
      if test $I -nt /var/spool/pgsql/exchange.db ;then
        cat $I |psql -U exchange -h 127.0.0.1
      fi
    done;
    touch /var/spool/pgsql/exchange.db

    if [ /var/spool/update/remote.keys -nt /root/.ssh/authorized_keys ] || [ ! -e /root/.ssh/authorized_keys ] || [ ! -s /root/.ssh/authorized_keys ];then
      (/usr/bin/ldapmodify -U admin -Y PLAIN -w "`cat /etc/mail/ldap`" -cf /var/spool/update/remote.keys
      /usr/bin/gensshauth > /root/.ssh/authorized_keys.tmp
      if [ ! -d /root/.ssh ];then
        mkdir /root/.ssh
        chmod 700 /root/.ssh
      fi;
      if [ -s /root/.ssh/authorized_keys.tmp ];then
        cp /root/.ssh/authorized_keys.tmp /root/.ssh/authorized_keys
      fi) > /dev/null 2>&1
    fi;
  fi;

  #Reinstall Grub/Update initrd if needed
  if [ ! -e /boot/grub/core.img ] || [ /usr/lib/grub/i386-pc/ -nt /boot/grub/core.img ];then
    /usr/sbin/mkgrub
   elif [ $NOKERN != 1 ] && [ $KERR == 0 ];then
    /usr/sbin/mkinitrd
  fi
fi;

exit $RERR
