##  Configuration for the SQL based IP Pool module (rlm_sqlippool)
##
##  The database schemas are available at:
##
##       doc/examples/*.sql
##
##  $Id: sqlippool.conf,v 1.1.2.6 2007/07/16 06:35:23 pnixon Exp $

sqlippool sqlippool {

 ################################################
 ## SQL instance to use (from postgresql.conf) ##
 ################################################
 sql-instance-name = "sql"

 ## SQL table to use for ippool range and lease info
 ippool_table = "radippool"

 ## IP lease duration. (Leases expire even if Acct Stop packet is lost)
 ## NOTE that for lease-duration to work as expected, you must enable
 ## Interim Accounting packets from the NAS.
 lease-duration = 3600

 ## Attribute which should be considered unique per NAS
 ## Using NAS-Port gives behaviour similar to rlm_ippool. (And ACS)
 ## Using Calling-Station-Id works for NAS that send fixed NAS-Port
 ## ONLY change this if you know what you are doing!
 pool-key = "%{NAS-Port}"
 #pool-key = "%{Calling-Station-Id}"

 ################################################################
 ## MySQL specific queries.                                    ##
 ################################################################

 ## This query allocates an IP address from the Pool
 ## The ORDER BY clause of this query tries to allocate the same IP-address
 ## to the user that they had last session...
 allocate-find = "SELECT FramedIPAddress FROM ${ippool_table} \
  WHERE pool_name = '%P' AND expiry_time < NOW() \
  ORDER BY (UserName <> '%{SQL-User-Name}'), \
  (CallingStationId <> '%{Calling-Station-Id}'), expiry_time \
  LIMIT 1 \
  FOR UPDATE"

 ## If you prefer to allocate a random IP address every time,
 ## use this query instead
 #allocate-find = "SELECT FramedIPAddress FROM ${ippool_table} \
 # WHERE pool_name = '%P' AND expiry_time < NOW() \
 # ORDER BY RAND() \
 # LIMIT 1 \
 # FOR UPDATE"

 ## This query marks the IP address handed out by "allocate-find" as used
 ## for the period of "lease-duration" after which time it may be reused.
 allocate-update = "UPDATE ${ippool_table} \
  SET NASIPAddress = '%{NAS-IP-Address}', pool_key = '${pool-key}', \
  CallingStationId = '%{Calling-Station-Id}', UserName = '%{SQL-User-Name}', \
  expiry_time = NOW() + INTERVAL ${lease-duration} SECOND \
  WHERE FramedIPAddress = '%I'"

 ## This query frees the IP address assigned to "pool-key" when a new request
 ## comes in for the same "pool-key". This means that either you are losing
 ## accounting Stop records or you use Calling-Station-Id instead of NAS-Port
 ## as your "pool-key" and your users are able to reconnect before your NAS
 ## has timed out their previous session. (Generally on wireless networks)
 ## (Note: If your pool-key is set to Calling-Station-Id and not NAS-Port
 ## then you may wish to delete the "AND nasipaddress = '%{Nas-IP-Address}'
 ## from the WHERE clause)
 allocate-clear = "UPDATE ${ippool_table} \
  SET NASIPAddress = '', pool_key = 0, CallingStationId = '', \
  expiry_time = NOW() - INTERVAL 1 SECOND \
  WHERE pool_key = '${pool-key}' \
  AND NASIPAddress = '%{NAS-IP-Address}'"


 ## This query extends an IP address lease by "lease-duration" when an
 ## accounting START record arrives
 start-update = "UPDATE ${ippool_table} \
  SET expiry_time = NOW() + INTERVAL ${lease-duration} SECOND \
  WHERE NASIPAddress = '%{NAS-IP-Address}' \
  AND pool_key = '${pool-key}'"

 ## This query frees an IP address when an accounting
 ## STOP record arrives
 stop-clear = "UPDATE ${ippool_table} \
  SET NASIPAddress = '', pool_key = 0, CallingStationId = '', \
  expiry_time = NOW() - INTERVAL 1 SECOND \
  WHERE NASIPAddress = '%{NAS-IP-Address}' \
  AND pool_key = '${pool-key}' \
  AND UserName = '%{SQL-User-Name}' \
  AND CallingStationId = '%{Calling-Station-Id}' \
  AND FramedIPAddress = '%{Framed-IP-Address}'"

 ## This query extends an IP address lease by "lease-duration" when an
 ## accounting ALIVE record arrives
 alive-update = "UPDATE ${ippool_table} \
  SET expiry_time = NOW() + INTERVAL ${lease-duration} SECOND \
  WHERE NASIPAddress = '%{Nas-IP-Address}' \
  AND pool_key = '${pool-key}' \
  AND UserName = '%{SQL-User-Name}' \
  AND CallingStationId = '%{Calling-Station-Id}' \
  AND FramedIPAddress = '%{Framed-IP-Address}'"


 ## This query frees all IP addresses allocated to a NAS when an
 ## accounting ON record arrives from that NAS
 on-clear = "UPDATE ${ippool_table} \
  SET NASIPAddress = '', pool_key = 0, CallingStationId = '', \
  expiry_time = NOW() - INTERVAL 1 SECOND \
  WHERE NASIPAddress = '%{NAS-IP-Address}'"

 ## This query frees all IP addresses allocated to a NAS when an
 ## accounting OFF record arrives from that NAS
 off-clear = "UPDATE ${ippool_table} \
  SET NASIPAddress = '', pool_key = 0, CallingStationId = '', \
  expiry_time = NOW() - INTERVAL 1 SECOND \
  WHERE NASIPAddress = '%{NAS-IP-Address}'"

}
