#!/bin/bash

if [ -e /install/netsentry-version ];then
  eval `cat /install/netsentry-version`
 else
  echo "Config not found"
  exit 255
fi

setterm -blank 20

if [ -e "/tmp/fstab.new" ];then
  rm /tmp/fstab.new
fi;

Install_System() {
  setterm -cursor off
  INST_BASE=/mnt/install
  /usr/bin/dialog --backtitle "$BT" --title "Perl Scripting"  --infobox "Installing Perl Scripting" 7 35
  tar -C ${INST_BASE} --use-compress-program=bunzip2 -xf /install/pkgs/perl.tbz > /dev/null 2>&1

  (cat << EOF
#!${INST_BASE}/usr/bin/perl -I ${INST_BASE}/usr/lib/perl5

open(FL,"-");
\$cnt=0;
\$percl=0;
while(<FL>)
  {
    \$cnt++;
    (\$perc)=split(/\./,((\$cnt/\$ARGV[0])*100));
    if (\$perc > \$percl)
      {
        printf(<STDOUT>,"\$perc\n");
      }
    \$percl=\$perc;
  }
close(FL);
EOF
) > /root/instguage
  chmod 750 /root/instguage

  setterm -cursor on
  rsync -avHKO --out-format="%n" --filter=". /install/core/core.filter" / ${INST_BASE}/ |\
    awk '/(^[a-z]+\/)|(^home$)/ {print $0}' |/root/instguage `grep -c "" /install/core/filelist` 2>/dev/null|\
    dialog --backtitle "$BT" --title "Installing" --guage "Percentage Files Transfered" 6 35 0
  rm /root/instguage
  tar -C ${INST_BASE} --use-compress-program=bunzip2 -xf /install/core/install.tbz

  for newdir in autofs cdrom floppy initrd proc update;do
    mkdir -p ${INST_BASE}/mnt/${newdir}
  done

  setterm -cursor off
  /usr/bin/dialog --backtitle "$BT" --title "Installing Kernel" --infobox "Installing Linux Kernel" 7 35
  tar -C ${INST_BASE} --use-compress-program=bunzip2 -xf /install/core/kernel.tar.bz2 > /dev/null 2>&1
  rsync -a /lib/modules/* ${INST_BASE}/lib/modules/ > /dev/null 2>&1
  rsync -a /boot/vmlinuz-install ${INST_BASE}/boot/vmlinuz-${KERNEL}-install
  rsync -a /boot/System.map-install ${INST_BASE}/boot/System.map-${KERNEL}-install
  rsync -a /boot/memtest.bin /boot/ > /dev/null 2>&1
  rsync -a /install/update ${INST_BASE}/var/spool/ > /dev/null 2>&1
  rsync -a /install/avirus ${INST_BASE}/var/spool/ > /dev/null 2>&1

  cp /install/netsentry-version ${INST_BASE}/etc
  chown -R clamav.clamav ${INST_BASE}/var/spool/avirus > /dev/null 2>&1

  for webdir in postgresql mysqlmanual phpmanual polycom snom;do
    if [ ! -d ${INST_BASE}/var/spool/apache/htdocs/${webdir} ];then
      mkdir ${INST_BASE}/var/spool/apache/htdocs/${webdir}
      chown www.www ${INST_BASE}/var/spool/apache/htdocs/${webdir}
    fi;
  done;

  /usr/bin/dialog --backtitle "$BT" --title "Locale Info" --infobox "Multilingual Support" 7 35
  tar -C ${INST_BASE} --use-compress-program=bunzip2 -xf /install/pkgs/locale.tbz > /dev/null 2>&1

  /usr/bin/dialog --backtitle "$BT" --title "DNS Server's" --infobox "Installing ISC Bind DNS Server" 7 35
  tar -C ${INST_BASE} --use-compress-program=bunzip2 -xf /install/pkgs/bind.tbz > /dev/null 2>&1

  /usr/bin/dialog --backtitle "$BT" --title "LDAP/Mail Server's" --infobox "Installing Open LDAP ,Mail And SSL Server" 7 35
  tar -C ${INST_BASE} --use-compress-program=bunzip2 -xf /install/pkgs/ldapmail.tbz > /dev/null 2>&1

  /usr/bin/dialog --backtitle "$BT" --title "Radius Server's" --infobox "Installing Free Radius Server" 7 35
  tar -C ${INST_BASE} --use-compress-program=bunzip2 -xf /install/pkgs/freeradius.tbz > /dev/null 2>&1

  /usr/bin/dialog --backtitle "$BT" --title "Samba / KRB" --infobox "Installing KRB And Samba V3 File Server" 7 35
  tar -C ${INST_BASE} --use-compress-program=bunzip2 -xf /install/pkgs/samba-krb.tbz > /dev/null 2>&1

  /usr/bin/dialog --backtitle "$BT" --title "Asterisk" --infobox "Installing Asterisk PBX Software" 7 35
  tar -C ${INST_BASE} --use-compress-program=bunzip2 -xf /install/pkgs/asterisk.tar.bz2 > /dev/null 2>&1

  /usr/bin/dialog --backtitle "$BT" --title "Frontpage" --infobox "Installing Frotpage Extentions" 7 35
  tar -C ${INST_BASE} --use-compress-program=bunzip2 -xf /install/pkgs/fp-v5.0.tbz > /dev/null 2>&1

  /usr/bin/dialog --backtitle "$BT" --title "Python Scripting" --infobox "Installing Python Scripting" 7 35
  tar -C ${INST_BASE} --use-compress-program=bunzip2 -xf /install/pkgs/python.tbz > /dev/null 2>&1

  /usr/bin/dialog --backtitle "$BT" --title "GNU TLS" --infobox "Installing GNU Transport Layer Security" 7 35
  tar -C ${INST_BASE} --use-compress-program=bunzip2 -xf /install/pkgs/gnutls.tar.bz2 > /dev/null 2>&1

  /usr/bin/dialog --backtitle "$BT" --title "Open VPN" --infobox "Installing Open VPN Server" 7 35
  tar -C ${INST_BASE} --use-compress-program=bunzip2 -xf /install/pkgs/openvpn.tbz > /dev/null 2>&1

  /usr/bin/dialog --backtitle "$BT" --title "FTP Server" --infobox "Installing Proftp" 7 35
  tar -C ${INST_BASE} --use-compress-program=bunzip2 -xf /install/pkgs/proftp.tbz > /dev/null 2>&1

  /usr/bin/dialog --backtitle "$BT" --title "Ghostscript" --infobox "Installing Ghostscript" 7 35
  tar -C ${INST_BASE} --use-compress-program=bunzip2 -xf /install/pkgs/ghostscript-8.54.tar.bz2 > /dev/null 2>&1

  /usr/bin/dialog --backtitle "$BT" --title "Hylafax" --infobox "Installing Hylafax Fax Server" 7 35
  tar -C ${INST_BASE} --use-compress-program=bunzip2 -xf /install/pkgs/hylafax.tar.bz2 > /dev/null 2>&1

  /usr/bin/dialog --backtitle "$BT" --title "Routing Protocols" --infobox "Installing Routing Protocols" 7 35
  tar -C ${INST_BASE} -xzf /install/pkgs/quagga.tgz

  /usr/bin/dialog --backtitle "$BT" --title "Doom Version 1" --infobox "3D Graphic Game Doom" 7 35
  tar -C ${INST_BASE} --use-compress-program=bunzip2 -xf /install/pkgs/games.tbz > /dev/null 2>&1

  /usr/bin/dialog --backtitle "$BT" --title "PostGRE SQL Server" --infobox "Installing PostGRE SQL Server" 7 35
  tar -C ${INST_BASE} --use-compress-program=bunzip2 -xf /install/pkgs/postgre.tar.bz2 > /dev/null 2>&1
  tar -C ${INST_BASE}/var/spool/apache/htdocs/postgresql -xzf  /install/pkgs/postgres.tar.gz > /dev/null 2>&1

  /usr/bin/dialog --backtitle "$BT" --title "ODBC And TDS Driver" --infobox "Installing ODBC Driver" 7 35
  tar -C ${INST_BASE} --use-compress-program=bunzip2 -xf /install/pkgs/odbc.tar.bz2 > /dev/null 2>&1
  tar -C ${INST_BASE} --use-compress-program=bunzip2 -xf /install/pkgs/freetds.tar.bz2 > /dev/null 2>&1

  /usr/bin/dialog --backtitle "$BT" --title "Web/Proxy Server" --infobox "Installing Web Server,Pages,MySQL,Proxy Server And Manuals" 7 35
  tar -C ${INST_BASE} --use-compress-program=bunzip2 -xf /install/pkgs/apache2.tbz > /dev/null 2>&1
  tar -C ${INST_BASE} --use-compress-program=bunzip2 -xf /install/pkgs/svn.tbz > /dev/null 2>&1
  tar -C ${INST_BASE} --use-compress-program=bunzip2 -xf /install/pkgs/squid.tbz > /dev/null 2>&1
  tar -C ${INST_BASE} --use-compress-program=bunzip2 -xf /install/pkgs/sogo.tbz > /dev/null 2>&1
  tar -C ${INST_BASE} --use-compress-program=bunzip2 -xf /install/pkgs/dbadmin.tbz > /dev/null 2>&1
  tar -C ${INST_BASE} --use-compress-program=bunzip2 -xf /install/pkgs/mysql.tbz > /dev/null 2>&1
  tar -C ${INST_BASE} -xzf /install/pkgs/horde.tgz > /dev/null 2>&1
  tar -C ${INST_BASE}/var/spool/apache/htdocs/phpmanual --use-compress-program=bunzip2 -xf /install/pkgs/php_manual_en.tar.bz2 > /dev/null 2>&1
  tar -C ${INST_BASE}/var/spool/apache/htdocs/mysqlmanual -xzf /install/pkgs/mysql-manual.tgz > /dev/null 2>&1
  chmod 750 ${INST_BASE}/var/spool/apache/htdocs/userguides/script/genimg.sh
#      chroot ${INST_BASE} /var/spool/apache/htdocs/userguides/script/genimg.sh

  /usr/bin/dialog --backtitle "$BT" --title "Polycom Phone Firmware" --infobox "Installing Polycom Phone Firmware" 7 35
  tar -C ${INST_BASE}/var/spool/apache/htdocs/polycom --use-compress-program=bunzip2 -xf /install/pkgs/polyfirm.tbz > /dev/null 2>&1
  chmod 770 ${INST_BASE}/var/spool/apache/htdocs/polycom/logs

  /usr/bin/dialog --backtitle "$BT" --title "Snom Phone Firmware" --infobox "Installing Snom Phone Firmware" 7 35
  tar -C ${INST_BASE}/var/spool/apache/htdocs/snom --use-compress-program=bunzip2 -xf /install/pkgs/snomfirm.tbz > /dev/null 2>&1

  /usr/bin/dialog --backtitle "$BT" --title "Sugar CRM" --infobox "Installing Sugar CRM" 7 35
  tar -C ${INST_BASE}/var/spool/apache/htdocs --use-compress-program=bunzip2 -xf /install/pkgs/sugarcrm.tar.bz2

  /usr/bin/dialog --backtitle "$BT" --title "Creating Mail/User Hash Directories" --infobox "Creating Mail/User Hash Directories" 5 45
  setfacl -m u::rwX -m g::rwX -m o::0 -m g:12:rwX -m g:100:rX -m m::rwX \
          -m d:u::rwX -m d:g::rwX -m d:o::0 -m d:g:12:rwX -m d:m::rwX ${INST_BASE}/var/spool/mail;
  for root1 in a b c d e f g h i j k l m n o p q r s t u v w x y z 1 2 3 4 5 6 7 8 9 0;do
    mkdir -m 0770 -p ${INST_BASE}/var/spool/mail/$root1;
    setfacl -m g:100:rX ${INST_BASE}/var/spool/mail/$root1;
    mkdir -m 0755 -p ${INST_BASE}/var/home/$root1;
    for root2 in a b c d e f g h i j k l m n o p q r s t u v w x y z 1 2 3 4 5 6 7 8 9 0;do
      mkdir -m 0770 -p ${INST_BASE}/var/spool/mail/$root1/$root2;
      setfacl -m g:100:rX ${INST_BASE}/var/spool/mail/$root1/$root2;
      mkdir -m 0755 -p ${INST_BASE}/var/home/$root1/$root2;
    done;
  done

  if [ ! -d /var/spool/apache/htdocs/ns/config ];then
    mkdir -p /var/spool/apache/htdocs/ns/config
    mkdir /var/spool/apache/htdocs/ns/config/sslconf
    mkdir /var/spool/apache/htdocs/ns/config/zones
  fi;

  /usr/bin/dialog --backtitle "$BT" --title "Client Software" --infobox "Installing Client Software" 7 35
  mkdir -p ${INST_BASE}/var/spool/samba/share/
  chmod 2777 ${INST_BASE}/var/spool/samba/share/
  cp -r /install/tools/* ${INST_BASE}/var/spool/samba/share/
  chmod -R -o=rwX,g=rwX,o=rX ${INST_BASE}/var/spool/samba/share/*
  chown -R root.139 ${INST_BASE}/var/spool/samba/share

  if [ ! -d ${INST_BASE}/var/spool/samba/dadmin ];then
    mkdir ${INST_BASE}/var/spool/samba/dadmin
  fi;
  tar -C ${INST_BASE}/var/spool/samba/dadmin -xzf /install/pkgs/windomadmin.tgz

  /usr/bin/dialog --backtitle "$BT" --title "Initial Config" --infobox "Creating Initial Config" 7 35
  cp /install/.profile ${INST_BASE}/root/.profile
  chmod 750 ${INST_BASE}/root/.profile
  echo "clear" > ${INST_BASE}/root/.bash_logout

  for sysdir in dev proc sys;do
    if [ ! -d ${INST_BASE}/${sysdir} ];then
        mkdir ${INST_BASE}/${sysdir}
    fi;
    mount --bind /${sysdir} ${INST_BASE}/${sysdir}
  done;

  cp /var/spool/apache/htdocs/ns/config/netsentry.conf ${INST_BASE}/var/spool/apache/htdocs/ns/config/
  if [ -e ${INST_BASE}/var/spool/apache/htdocs/ns/config/networksentry-lite ];then
    rm ${INST_BASE}/var/spool/apache/htdocs/ns/config/networksentry-lite
  fi;
  if [ ! -e ${INST_BASE}/var/spool/apache/htdocs/ns/config/networksentry-full ];then
    touch ${INST_BASE}/var/spool/apache/htdocs/ns/config/networksentry-full
  fi;
  if [ -e ${INST_BASE}/etc/.networksentry-lite ];then
    rm ${INST_BASE}/etc/.networksentry-lite
  fi;

  #Create Serial On Install
  if [ "$SERIAL" ];then
    echo "Serial $SERIAL" >> ${INST_BASE}/var/spool/apache/htdocs/ns/config/netsentry.conf
   else
    cp /install/serial.pl ${INST_BASE}/root
    chmod 750 ${INST_BASE}/root/serial.pl
    chroot ${INST_BASE} /root/serial.pl ${NET_HNAME}.${NET_DOMAIN} ${NIP_ADDR}+${NSN_ADDR} >> ${INST_BASE}/var/spool/apache/htdocs/ns/config/netsentry.conf
    rm ${INST_BASE}/root/serial.pl
  fi

  chmod 1777 ${INST_BASE}/tmp ${INST_BASE}/var/run
  chown -R www.www ${INST_BASE}/var/spool/apache/htdocs
  chmod 770 ${INST_BASE}/var/spool/clientmqueue
  mkdir -p ${INST_BASE}/var/run/nscd ${INST_BASE}/var/db/nscd > /dev/null 2>&1

  chroot ${INST_BASE} /sbin/ldconfig
  chroot ${INST_BASE} /sbin/hwclock --systohc --utc
  chroot ${INST_BASE} /usr/sbin/rndc-confgen -a > /dev/null 2> /dev/null
  chroot ${INST_BASE} /usr/bin/rebuild-info

#  /usr/bin/dialog --backtitle "$BT" --title "Locate Database" --infobox "Updating File Locate Database" 7 35
#  chroot ${INST_BASE} /usr/bin/updatedb --output=/var/db/locate --prunepaths='/proc /dev /sys /tmp /var/tmp' >/dev/null 2>&1

  /usr/bin/dialog --backtitle "$BT" --title "Init RD" --infobox "Creating Initial RAM Disks" 7 35
  rm ${INST_BASE}/etc/mtab
  ln -s /proc/mounts ${INST_BASE}/etc/mtab
  chroot ${INST_BASE} /usr/sbin/mkfstab > ${INST_BASE}/etc/fstab
  rm ${INST_BASE}/etc/mtab
  chroot ${INST_BASE} mount -fa
  chroot ${INST_BASE} /usr/sbin/mkgrub > /dev/null 2>&1

  /usr/bin/dialog --backtitle "$BT" --title "Post Install" --infobox "Running genconf/servconfig This Takes Several Minutes" 7 35
  touch ${INST_BASE}/tmp/.firstconfig ${INST_BASE}/etc/.needsreconf
  chroot ${INST_BASE} /usr/sbin/genconf > /dev/null 2>&1
  chroot ${INST_BASE} /usr/sbin/servconfig > /dev/tty4 2> /dev/tty4
  rm -rf ${INST_BASE}/var/spool/mail/shared
  rm ${INST_BASE}/etc/.install ${INST_BASE}/etc/.cdrom > /dev/null 2>&1

  setterm -cursor on
  clear
  return 0
}

Fdisk_Do() {
  DISK_FD=${2}

  (pvdisplay -c ${DISK_FD}* 2>/dev/null |awk -F: '!/:#orphan.*/ && $12 != "" {printf "if [ \"%s\" ];then vgremove -f %s;fi\n",$2,$2}' |sh
  pvdisplay -c ${DISK_FD}* 2>/dev/null |awk -F: '$12 != "" {printf "pvremove -ff -y%s\n",$1}' |sh) > /dev/null 2>&1

  SIZE=`echo ${DISK_FD} |sed -e "s/\/dev\/\(.*\)/cat \/sys\/block\/\\1\/size/" |sh`
  SIZE=`echo "${SIZE} / (2048*1024)" |bc`
  sgdisk -Z ${DISK_FD}
  if (( ${SIZE} > 1024 ));then
    parted -s ${DISK_FD} mklabel gpt
    parted -s ${DISK_FD} mkpart grub 1 2
    parted -s ${DISK_FD} set 1 bios on
    parted -s ${DISK_FD} set 1 hidden on
    parted -s ${DISK_FD} mkpart swap 2 1026
    parted -s ${DISK_FD} "mkpart lvm 1026 -1"
    parted -s ${DISK_FD} set 3 lvm on
   else
    parted -s ${DISK_FD} mklabel msdos
    parted -s ${DISK_FD} mkpart primary ext2 1 2
    parted -s ${DISK_FD} set 1 hidden on
    parted -s ${DISK_FD} mkpart primary linux-swap 2 1026
    parted -s ${DISK_FD} "mkpart primary ext2 1026 -1"
    parted -s ${DISK_FD} set 3 boot on
    parted -s ${DISK_FD} set 3 lvm on
  fi;

  sync
  losetup ${DISK_FD} 2>/dev/null |sed -e "s/\([a-z0-9\/]\+\):.*(\(.*\))/losetup -d \1;losetup \1 \2/" |sh
  sync
  sleep 5

  if [ -b ${DISK_FD}p1 ];then
    DISK_FD=${DISK_FD}p
  fi;

  if [ -b ${DISK_FD}1 ];then
    dd if=/dev/zero of=${DISK_FD}1
  fi;

  if [ -b ${DISK_FD}2 ];then
    mkswap ${DISK_FD}2
    swapon ${DISK_FD}2
  fi;

  if [ -b ${DISK_FD}3 ];then
    pvcreate -ff -y ${DISK_FD}3
    if [ ! -d /dev/${1} ];then
      vgcreate -f ${1} ${DISK_FD}3
     else
      vgextend -f ${1} ${DISK_FD}3
    fi;
  fi;
}

Format_LVM() {
  (lvcreate $1 -n $2 -l 100%VG
  vgchange -a y $1
  mkfs.ext4 -L $2 -j -v /dev/$1/$2 -L $2) >/dev/tty4 2>/dev/tty4
}

Fdisk() {
  if [ "${DSKS}" == "" ];then
    sleep 5
    MDDSK=`ls /dev/md[a-z] 2>/dev/null`
    if [ "$MDDSK" ];then
      DSKS=$MDDSK
    fi;
    for hdd in `ls /dev/[hs]d[a-z] 2>/dev/null`;do
      if [ ! "`pvdisplay -c 2>/dev/null |grep -E "${hdd}[0-9]:flash:"`" ];then
        DSKS="${DSKS} $hdd"
      fi;
    done
  fi;

  DISK="";
  MAN_FDISK="";
  DCNT=1;
  for dsk in ${DSKS};do
    DSIZE=`echo $dsk |awk -F/ '{printf "cat /sys/block/%s/size",$3}' |sh`
    if [ "${DSIZE}" != "0" ] && [ "${DSIZE}" ];then
      DISK="${DISK} $dsk $DCNT off"
      let DCNT++;
    fi;
  done;

  /usr/bin/dialog --backtitle "$BT" --title "Fdisk" --separate-output\
                  --checklist "Select Disk To Fdisk\nWARNING: Disks Selected Will Be NUKED!!!\nCall George W This Is A WMD\nWeapon Of M$ Destruction"\
                  17 45 7 ${DISK} 2> /tmp/menu.tmp.$$
  RETVAL=$?;
  FD_CHOICE=`cat /tmp/menu.tmp.$$`;
  rm /tmp/menu.tmp.$$;

  if [ $RETVAL == "0" ] && [ "$FD_CHOICE" ];then
    for DISK_FD in $FD_CHOICE;do
      /usr/bin/dialog --backtitle "$BT" --title "Fdisk" --infobox "Creating partitions and assiging to PV/VG" 4 35
      Fdisk_Do lvm ${DISK_FD} > /dev/tty4 2>/dev/tty4
    done;

    /usr/bin/dialog --backtitle "$BT" --title "Formating Root LV" --infobox "Formating Linux Partition" 4 35
    Format_LVM lvm root
    echo "/ /dev/lvm/root" >> /tmp/fstab.new
    Mount_All
    Local_Install
   else
    return
  fi
}

View_Aint() {
  /sbin/ip addr show >/tmp/ifconfig
  /usr/bin/dialog --backtitle "$BT" --clear --title "Active Interfaces" --textbox /tmp/ifconfig 21 78
}

View_Aroute() {
  /sbin/ip route show table all >/tmp/routeing
  /usr/bin/dialog --backtitle "$BT" --clear --title "Routeing Table" --textbox /tmp/routeing 21 78
}


View_disk() {
  sfdisk -uM -Vl > /tmp/disk.$$
  /usr/bin/dialog --backtitle "$BT" --clear --title "Hard Drives" --textbox /tmp/disk.$$ 21 78
}

View_lspci() {
  /usr/sbin/lspci >/tmp/lspci
  /usr/bin/dialog --backtitle "$BT" --clear --title "PCI Database" --textbox /tmp/lspci 21 78
}

View_Amount() {
  /bin/df -h >/tmp/mounts
  /usr/bin/dialog --backtitle "$BT" --clear --title "Active Mounts" --textbox /tmp/mounts 21 78
}

View_Proc() {
  /bin/ps ax >/tmp/procs
  /usr/bin/dialog --backtitle "$BT" --clear --title "Active Prosesors" --textbox /tmp/procs 21 78
}

View_Menu() {
  /usr/bin/dialog --backtitle "$BT" --clear --title "View Config Menu (Viewing Items Involves Saveing)" \
    --menu "Select The Config You Wish To See." 15 70 8\
       "1" "Active Interfaces"\
       "2" "Active Routeing Table"\
       "3" "Active Mounts"\
       "4" "Active Procesors"\
       "5" "PCI Database"\
       "6" "Disk Drives"\
       "M" "Return To Main Menu" 2> /tmp/menu.tmp.$$
  RETVAL=$?;
  CM_CHOICE=`cat /tmp/menu.tmp.$$`;
  rm /tmp/menu.tmp.$$;
  if [ $RETVAL == "0" ];then
    case $CM_CHOICE in
        1)View_Aint;;
        2)View_Aroute;;
        3)View_Amount;;
        4)View_Proc;;
        5)View_lspci;;
        6)View_disk;;
        M)return 1;;
      esac;
    fi;
}

Mounts() {
  touch /tmp/fstab.new
  DISK="";
  DCNT=1;
  PCNT=1;
  for dsk in ${DSKS};do
    for prt in `fdisk -l $dsk |grep "Linux" |grep -v "Linux swap" |awk '{print $1}'`;do
      ISMNT=`grep $prt /tmp/fstab.new`;
      let PCNT++;
      if [ "$ISMNT" == "" ];then
        DISK="${DISK} $prt $DCNT off"
        LPART=$prt
        let DCNT++;
      fi;
    done;
  done;

  if [ "${DISK}" == "" ] && [ "$DCNT" == 1 ] && [ "$PCNT" == 1 ];then
    /usr/bin/dialog --backtitle "$BT" --title "Partition Allocation Error" --msgbox "There Where No Partitons Allocated." 6 35
    return
   elif [ "$DCNT" == 1  ];then
    /usr/bin/dialog --backtitle "$BT" --title "Partition(s) Allocated" --msgbox "All Partitions Have Been Allocated." 6 35
    return
   elif (( $PCNT == 2 ));then
    echo "/ ${LPART}" >> /tmp/fstab.new
    Mount_All
    Local_Install
   elif (( $DCNT > 1 ));then
    FSTAB=`cat /tmp/fstab.new`;
    /usr/bin/dialog --backtitle "$BT" --title "Configure Mount Points"\
                    --radiolist "Please Configure Mount Points Configure\n\
One Root File System As The Last Partition.\n\n\
$FSTAB"\
        20 70 6 ${DISK} 2> /tmp/menu.tmp.$$
    RETVAL=$?;
    PT_CHOICE=`cat /tmp/menu.tmp.$$`
    rm /tmp/menu.tmp.$$;
    if [ $RETVAL == "0" ] && [ "$PT_CHOICE" != "" ];then
      /usr/bin/dialog --backtitle "$BT" --title "Configure Mount Points"\
                      --inputbox "Enter Mount Point" 10 35 "/" 2> /tmp/menu.tmp.$$
      RETVAL=$?;
      MP_CHOICE=`cat /tmp/menu.tmp.$$`
      rm /tmp/menu.tmp.$$
      if [ $RETVAL == "0" ] && [ "$PT_CHOICE" != "" ];then
        ISMNT1=`grep $PT_CHOICE /tmp/fstab.new`;
        ISMNT2=`grep -w $MP_CHOICE /tmp/fstab.new`;
        if [ "$ISMNT1" == "" ] && [ "$ISMNT2" == "" ];then
          echo "$MP_CHOICE $PT_CHOICE" >> /tmp/fstab.new
        fi;
	if [ $MP_CHOICE == "/" ];then
          Mount_All;
         else
          Mounts;
        fi;
      fi;
    fi;
  fi;
}

Mount_All() {
  if [ -e "/tmp/fstab.new" ];then
    cat /tmp/fstab.new |awk '$1 == "/" {print "mount -t ext4 "$2" /mnt/install -o acl,user_xattr >/dev/tty4 2>/dev/tty4"}'|sh
    MNTRT=`grep "/mnt/install " /proc/mounts`;
    if [ "$MNTRT" == "" ];then
      /usr/bin/dialog --backtitle "$BT" --title "Mount Failure" --msgbox "No Root Partition Defined" 5 35
     else
      cat /tmp/fstab.new |/bin/sort |awk '$1 != "/" {print "mkdir -p /mnt/install/"$1";mount "$2" /mnt/install/"$1" >/dev/tty4 2> /dev/tty4"}'|sh
    fi
   else
    /usr/bin/dialog --backtitle "$BT" --title "Mount Failure" --msgbox "No Mount Points Are Defined" 5 35
  fi
}

New_Serial() {
  /usr/bin/dialog --backtitle "$BT" --title "New Serial Number" --inputbox\
    "Please Enter The Serial Number For This Version. The Existing Serial Will Be Used If Left Blank." 10 51 "" 2> /tmp/menu.tmp.$$
  RETVAL=$?
  NEW_SER=`cat /tmp/menu.tmp.$$`;
  rm /tmp/menu.tmp.$$;
  if [ $RETVAL == "0" ];then
    SERIAL=$NEW_SER
  fi;
}

Date_Time() {
  dialog --backtitle "$BT" --clear --title "Configure Date And Time" \
         --inputbox "Set The Date And Time In The Following Format MMDDhhmmCCYY.ss" \
         9 40 "`date +%m%d%H%M%Y.%S`" 2> /tmp/datetime

  RETVAL=$?;
  if [ $RETVAL == "0" ];then
    /usr/bin/date `cat /tmp/datetime` > /dev/null 2>&1
    DATEOK=$?
    if [ $DATEOK != "0" ];then
      /usr/bin/dialog --backtitle "$BT" --clear --title "Date/Time Error"\
        --msgbox "Invalid Date Format"  9 40
     else
      /sbin/hwclock --systohc --utc
      /usr/bin/dialog --backtitle "$BT" --clear --title "Date/Time Ok"\
        --msgbox "`date`"  9 40
    fi;
  fi;
}

Local_Install(){
  MNTRT=`grep "/mnt/install " /proc/mounts`;
  if [ "$MNTRT" == "" ];then
    /usr/bin/dialog --backtitle "$BT" --title "Cannot Install" --msgbox "No Root Partition Mounted" 5 35
    return 1;
  fi;

  Install_System
  /sbin/init 0
}

Main_Menu() {
  /usr/bin/dialog --backtitle "$BT" --clear --title "Main Menu" --menu "Read Documentation For More Information." 12 70 6\
           "1" "Fdisk/Format Drive(s)"\
           "2" "Configure Mounts"\
           "3" "Configure Server Name And Address"\
           "4" "Configure Server Date And Time"\
           "I" "Install Software"\
           "V" "View Config Files/Active System" 2> /tmp/menu.tmp.$$
  RESULT=$?;
  MEN_CHOICE=`cat /tmp/menu.tmp.$$`;
  rm /tmp/menu.tmp.$$;
}

Network_Address()  {
  /usr/sbin/sysreconf
  if [ ! -d /var/spool/apache/htdocs/ns/config ];then
    mkdir -p /var/spool/apache/htdocs/ns/config
  fi;
  cp /tmp/netsentry.conf /var/spool/apache/htdocs/ns/config
}

if [ "${1}" == "install" ];then
  Install_System
  exit
 elif [ "${1}" == "fdisk" ];then
  shift
  vg=$1
  shift
  for dfdisk in $@;do
    if [ -b ${dfdisk} ];then
      Fdisk_Do $vg ${dfdisk}
    fi;
  done;
  exit
 elif [ "${1}" == "format" ];then
  Format_LVM ${2} ${3}
  exit
fi;

if [ -e /mnt/install/etc/.install ];then
  cat /proc/mounts |grep "/mnt/install" |awk '{print $2" "$1}' |sort -r |awk '{print "umount "$1}' |sh
  awk '$2 == "partition" {print "swapoff "$1}' /proc/swaps |sh
fi;

MDDSK=`ls /dev/md[a-z] 2>/dev/null`
if [ "$MDDSK" ];then
  DSKS=$MDDSK
fi;
for hdd in `ls /dev/[hs]d[a-z] 2>/dev/null`;do
  if [ ! "`pvdisplay -c 2>/dev/null |grep -E "${hdd}[0-9]:flash:"`" ];then
    DSKS="${DSKS} $hdd"
  fi;
done

DISK="";
DCNT=1;

(/usr/sbin/sysreconf /install/default.conf.sysvars
cp /tmp/netsentry.conf /var/spool/apache/htdocs/ns/config) > /dev/tty4 2>&1

Date_Time;
Fdisk;

RESULT="0";
while [ $RESULT == 0 ];do
  Main_Menu;
  echo "$MEN_CHOICE";
  case $MEN_CHOICE in
    1)Fdisk;;
    2){Mounts;
       Mount_All};;
    3)Network_Address;;
    4)Date_Time;;
    I)Local_Install;;
    V){RET=0;
       while [ ${RET} == 0 ];then
         View_Menu;;
         RET=$?;
       do};;
  esac;
done
